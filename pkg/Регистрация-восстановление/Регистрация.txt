------ Менять токен в кеше во время работы.
--- Почта
--- Пароль
--- Ключ
--- Подтвержденный bool (можно ли устанавливать пароль или создавать аккаунт)

smtp.ValidateEmail(account, key) (token,error) - отправляет код на почту, заносит в кеш данные аккаунта. Возвращает токен.
smtp.CheckKey(token, key) (token,error) - проверяет ключ в почте, устанавливает статус. Возвращает новый токен.
smtp.CheckStatus(token) bool - проверяет статус аккаунта. Возвращает bool.
smtp.Delete(token) - удаляет аккаунт из кеша.

models.Create() - создает аккаунт в БД
models.GetAccountViaEmail() - получить аккаунт из БД по почте
models.UpdateAllFields() - обновить все данные в БД (для замены пароля)

/api/user/new
- Сгенерировать токен
- Отправить на почту                                    ||| smtp.ValidateEmail отправляет код на почту
- Добавить в кеш (новый аккаунт)                        |||
- Вернуть токен

/api/user/new/validate
- Сравнить ключ по полученному токену в кеше            |||smtp.CheckKey проверяет ключ, который был отправлен
- Произвести действие регистрации                       |||models.Create()
- вернуть только код удачи

/api/user/password/reset
- Сгенерировать токен
- Отправить на почту                                    ||| smtp.ValidateEmail отправляет код на почту
- Добавить в кеш (восстановление пароля)
- Вернуть токен

/api/user/password/validate
- Сравнить ключ по полученному токену в кеше            |||smtp.CheckKey проверяет ключ, который был отправлен
- Установить тип "подтвержден"                          |||smtp - сделать валидным для установки пароля
- Сгенерировать токен
- Вернуть токен

/api/user/password/set
- Взять структуру по кешу                               |||smtp.CheckPasswordStatus
- Если тип "подтвержден", то установить новый пароль    |||models.UpdateAllFields()
- Вернуть код удачи